name: Docker Build Image from Repository

on:
  schedule:
    - cron: '0 0 * * 0' # Every Sunday at 00:00
  push:
    branches:
      - '*'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '*'

env:
  REGISTRY1: ghcr.io # GitHub Container Registry
  REGISTRY2: docker.io # Docker Hub
  IMAGE_NAME1: ${{ github.repository }} # github.repository as <account>/<repo>
  IMAGE_NAME2: ${{ secrets.DOCKERHUB_REPO }} # docker.io/<account>/<repo>

jobs:
  build-packages:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout # Checkout the repository
        uses: actions/checkout@v3
      - name: Setup QEMU # Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup Docker Buildx # Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Publish to GitHub Container Registry
      - name: Login to GitHub Container Registry # Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY1 }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get & Set Container Metadata # Get Container Metadata
        id: meta-packages
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY1 }}/${{ env.IMAGE_NAME1 }}
      - name: Build & Push # Build & Push
        id: build-and-push-packages
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-packages.outputs.tags }}
          labels: ${{ steps.meta-packages.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-docker:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout # Checkout the repository
        uses: actions/checkout@v3
      - name: Setup QEMU # Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup Docker Buildx # Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Publish to GitHub Container Registry
      - name: Login to GitHub Container Registry # Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY2 }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get & Set Container Metadata # Get Container Metadata
        id: meta-packages
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY2 }}/${{ env.IMAGE_NAME2 }}
      - name: Build & Push # Build & Push
        id: build-and-push-packages
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-packages.outputs.tags }}
          labels: ${{ steps.meta-packages.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max